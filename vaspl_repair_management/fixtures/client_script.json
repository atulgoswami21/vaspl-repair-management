[
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Demo customer Feedback",
  "enabled": 0,
  "modified": "2023-01-03 17:55:26.565961",
  "module": "CRM",
  "name": "Custom buttons",
  "script": "frm.add_custom_button('click me',() => {\r\n \r\n\tfrapee.msgprint(__('You ckicked'));\r\n\t\r\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Repair Note 1",
  "enabled": 0,
  "modified": "2023-03-22 13:11:40.636200",
  "module": null,
  "name": "Repair note custom button",
  "script": "frappe.ui.form.on('Repair Note 1', {\n\trefresh(frm) {\n\t     \n\n\tfrm.add_custom_button(__('Sales Order'), function(){\n\t    frappe.set_route(\"app\", \"sales-order\", \"new-sales-order\");\n\t   //frappe.msgprint(frm.doc.email);\n    }, __(\"Sales Order Generate\")).css({'background-color':'#328fd3','color':'white'});\n    \n    \n\n    \n\n //\tfrm.add_custom_button(__('Generate Document'),\n//cur_frm.cscript['generate_document'], \"icon-exclamation\", \"btn-default\");\n\n    \n  //frm.add_custom_button(__(\"New\")).addClass(\"btn-warning\").css({'color':'white','background-color':'blue','font-weight': 'bold'}),function(){\n   //frappe.set_route(\"app\", \"sales-order\", \"new-sales-order\");   \n  //};\n    \n   // var set_css = function(frm){\n     //  addClass(\"btn-warning\").css({'color':'green','font-weight': 'bold'});\n        \n    //}\n\t}\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "RN Work Order",
  "enabled": 1,
  "modified": "2023-01-09 12:50:12.710873",
  "module": null,
  "name": "RN workorder custom button",
  "script": "frappe.ui.form.on('RN Work Order', {\n\trefresh(frm) {\n    \tfrm.add_custom_button(__('WO Job Card'), function(){\n    \t     frappe.set_route(\"app\", \"rn-job-card\", \"new-rn-job-card\")\n        //frappe.msgprint(frm.doc.email);\n    }, __(\"JC Issue\"));\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Invoice",
  "enabled": 1,
  "modified": "2023-01-16 14:58:48.326722",
  "module": null,
  "name": "address fetch in sales invoice",
  "script": "frappe.ui.form.on(\"Sales Invoice\", \"new_address\", function(frm, cdt, cdn) {\r\n    if(frm.doc.new_address){\r\n     return frm.call({\r\n      method: \"frappe.contacts.doctype.address.address.get_address_display\",\r\n      args: {\r\n        \"address_dict\": frm.doc.new_address\r\n      },\r\n      callback: function(r) {\r\n       if(r.message)\r\n           frm.set_value(\"full_address\", r.message);\r\n        \r\n      }\r\n        });\r\n    }\r\n    else{\r\n        frm.set_value(\"full_address\", \"\");\r\n    }\r\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Invoice",
  "enabled": 1,
  "modified": "2023-01-16 15:47:44.957225",
  "module": null,
  "name": "fetch value from customer in sales invoice",
  "script": "cur_frm.add_fetch('customer','vat_id','vat_id')",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Order",
  "enabled": 0,
  "modified": "2023-03-06 11:53:16.524073",
  "module": null,
  "name": "fetch value of party gdn details",
  "script": "cur_frm.add_fetch('repair_note','party_gdn_details','party_gdn_details');\ncur_frm.add_fetch('repair_note','party_name','customer');\ncur_frm.add_fetch('repair_note','repair_order_ext_detail','repair_order_ext');\ncur_frm.add_fetch('repair_note','repair_order_ext_date','ro_ext_date');\ncur_frm.add_fetch('repair_note','rn_no','rn_no');\n\n\n\n//frappe.ui.form.on(\"Sales Order\",{\n    \n  //  \"repair_note\": function(frm) {\n        \n    //    repair_note.css({'color':'red'});\n    //}\n//});\n\n\n\n\n//frappe.ui.form.on(\"Sales Order\", {\n\n    \n//\"repair_note\": function(frm) {\n  \n\t\n  //      frappe.model.with_doc(\"Repair Note 1\", frm.doc.repair_note, function() {\n\t\t\n    //        $.each(Repair_Note_1.Child_of_Repair_Note, function(index, row) {\n\t\t\t\n      //          d = frm.add_child(\"Child of repair note on sales order\");\n\t\t\t\t\n        //        d.partno = row.party_name;\n\t\t\t\t\n                //d.item_name__description = row.targetfieldb\n\t\t\t\t\n          //      cur_frm.refresh_field(\"Child of repair note on sales order\");\n\t\t\t\t\n        //    });\n    //    });\n//    }\n//});\n\n\n\nfrappe.ui.form.on('Sales Order', {\nrepair_note: function(frm){\n\t    console.log(frm);\n\t}\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Repair Note 1",
  "enabled": 1,
  "modified": "2023-01-16 17:31:31.224598",
  "module": null,
  "name": "trigger event",
  "script": "frappe.ui.form.on('Repair Note 1', {\n\tparty_name: function(frm){\n\t    console.log(frm)\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Repair Note 1",
  "enabled": 1,
  "modified": "2023-01-18 10:32:51.838541",
  "module": null,
  "name": "Repair Note Submit",
  "script": "frappe.ui.form.on(\"Repair Note 1\", {\n\n\tstatus: function(frm){\n\t\tpopup(frm);\n\t}\n});\n\nvar popup = function(frm) \n{\n\n\tif(frm.doc.status == \"Submitted\")\n\t{\n            frappe.confirm(\n                'Are you sure you want to cancel this form? After you click on <b>cancel</b>, you will not be able to change the data.',\n                function(frm){\n\t\t\tcur_frm.save();\n                },\n                function(frm){\n                    window.close();\n                }\n\t    );\n\t}\n};",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "CA Form",
  "enabled": 0,
  "modified": "2023-01-24 15:31:54.353114",
  "module": null,
  "name": "CA form serial no fetch",
  "script": "frappe.ui.form.on(\"Child of CA Form 1\", {\r\n    \"repair_note\": function(frm) {\r\n        frappe.model.with_doc(\"Child of Repair Note\", frm.doc.trigger, function() {\r\n            $.each(repair_note_1.SourceTable, function(index, row) {\r\n                d = frm.add_child(\"ca_form\");\r\n                d.serial_no = row.serial_no;\r\n               // d.sourcefield2 = row.targetfieldb;\r\n                cur_frm.refresh_field(\"CA Form\");\r\n            });\r\n        });\r\n    }\r\n});\r\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Beyond Economic Repair",
  "enabled": 1,
  "modified": "2023-03-13 12:25:50.517465",
  "module": null,
  "name": "BER Fetch form repair note",
  "script": "frappe.ui.form.on('Beyond Economic Repair', {\n   rn_no : function(frm){\n       if (frm.doc.rn_no){\n           frm.clear_table('ber');\n           frappe.model.with_doc('Repair Note 1', frm.doc.ber,function(){\n               let source_doc = frappe.model.get_doc('Repair Note 1', frm.doc.ber);\n               $.each(source_doc.repair_note_table, function(index,source_row){\n                   var addchild = cur_frm.add_child('ber');\n                   addchild.part_no = source_row.partno;\n               });\n           });\n       }\n   }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Safety Feedback",
  "enabled": 0,
  "modified": "2023-02-14 11:05:56.763312",
  "module": null,
  "name": "filter option in select field",
  "script": "frappe.ui.form.on(\"Safety Feedback\", \"state\", function(frm) {\r\n  if(frm.doc.state == \"Karnataka\")\r\n  {\r\n    set_field_options(\"city\", [\"Bangalore\",\"Mysore\"])\r\n  }\r\n  else if(frm.doc.state == \"Maharashtra\")\r\n  {\r\n    set_field_options(\"city\", [\"Mumbai\",\"Pune\"])\r\n  }\r\n  else if(frm.doc.state == \"\")\r\n  {\r\n    set_field_options(\"city\", [\"\",\"Bangalore\",\"Mysore\",\"Mumbai\",\"Pune\"])\r\n  }\r\n  });\r\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "File",
  "enabled": 0,
  "modified": "2023-02-15 12:26:44.562854",
  "module": null,
  "name": "New button in file",
  "script": "//frappe.ui.form.on('File', {\r\n//\trefresh(frm) {\r\n\t     \r\n\r\n//\tfrm.add_custom_button(__('Sales Order'), function(){\r\n//\t    frappe.set_route(\"app\", \"file?folder=Home#\");\r\n\t   //frappe.msgprint(frm.doc.email);\r\n   // }, __(\"Sales Order Generate\")).css({'background-color':'#328fd3','color':'white'});\r\n   //  console.log(frm);\r\n    \r\n//\t}\r\n//});\r\n\r\n\r\n\r\nfrappe.ui.form.on(\"File\", {\r\n    refresh: function(frm) {\r\n        frm.add_custom_button(__('New Folder'), function() {\r\n              frm.trigger('New Folder');\r\n              //frm.save('Submit');\r\n        });\r\n    }\r\n});\r\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Safety Audit",
  "enabled": 1,
  "modified": "2023-02-21 12:38:44.562347",
  "module": null,
  "name": "custom notification",
  "script": "frappe.ui.form.on('Safety Audit', {\n\nafter_save:function(frm){\n    frappe.msgprint({\n        title:__(\"Notification\"),\n        indicator:'blue',\n        message:__('Safety Audit Created')\n    })\n}\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Repair Note 1",
  "enabled": 1,
  "modified": "2023-03-22 13:11:30.227453",
  "module": null,
  "name": "Custom Notification for Repair Note 1",
  "script": "frappe.ui.form.on('Repair Note 1', {\n\non_submit:function(frm){\n    //console.log(frm.doc);\n    frappe.msgprint({\n        title:__(\"Notification\"),\n        indicator:'blue',\n        message:__('Repair Note Created for {0}',[frm.doc.party_name])      \n    });\n}\n\n//on_submit: function(frm) {\n\n//frappe.msgprint(\"Repair note Ceated successfully\",[frm.doc.party_name]);\n\n//}\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Safety Audit",
  "enabled": 0,
  "modified": "2023-02-22 12:01:19.834949",
  "module": null,
  "name": "Naming series",
  "script": "frappe.ui.form.on('Safety Audit', {\r\n    onload: function(frm) {\r\n        frm.set_naming_series_options({\r\n           \"WOR-\": \"WOR-\",\r\n            \"PWOR-\": \"PWOR-\"\r\n        });\r\n    }\r\n});\r\n\r\n\r\n//frappe.ui.form.on('Safety Audit', {\r\n  //  onload: function(frm) {\r\n//        frm.set_value('naming_series', 'WOR-.YYYY.-');\r\n  //  }\r\n//});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Safety Meeting",
  "enabled": 0,
  "modified": "2023-02-23 14:42:16.295583",
  "module": null,
  "name": "Child table trigger",
  "script": "frappe.ui.form.on('Child of Safety Meeting', {\n\t\n//item_name: function(frm){                                // item_name is child table name field\n  //  frappe.msgprint(\"Trigger event\")\n//}\n\nitem_name(frm, cdt, cdn) {\n    \n    frappe.msgprint(\"Trigger event\");\n}\n});\n\n\n// we can use both the events to trigger",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Repair Note 2",
  "enabled": 1,
  "modified": "2023-03-09 14:55:25.357516",
  "module": null,
  "name": "fetch child table",
  "script": "frappe.ui.form.on(\"Repair Note 2\", {\n    \n    \"name1\": function(frm) {\n         //console.log(frm.doc.name1);\n            if(frm.doc.name1){\n                frappe.model.with_doc(\"fetch child table doc\", frm.doc.name1, function() {\n                   \n                        var tabletransfer= frappe.model.get_doc(\"fetch child table doc\", frm.doc.name1);\n                      //  console.log(tabletransfer);\n                        $.each(tabletransfer.table_2, function(index, row){\n                            var d = frm.add_child(\"operation_table\");\n                            d.operations = row.operations;\n                            d.workstation_type = row.workstation_type;\n                            d.operations_time = row.operations_time;\n                            frm.refresh_field(\"operation_table\");\n                            \n                        });\n                    \n                });\n            }else{\n                frm.clear_table(\"operation_table\");\n                frm.refresh_field(\"operation_table\");\n            }\n    }\n});\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "COVERS  DETAILS",
  "enabled": 1,
  "modified": "2023-02-28 14:44:26.350763",
  "module": null,
  "name": "Cover details to fetch child table",
  "script": "frappe.ui.form.on(\"COVERS  DETAILS\", {\n    \n    \"routing\": function(frm) {\n        \n        frm.clear_table(\"operations_table\");\n        frm.refresh_field(\"operations_table\");\n         //console.log(frm.doc.name1);\n            if(frm.doc.routing){\n                \n                frappe.model.with_doc(\"Routing\", frm.doc.routing, function() {\n                   \n                        var tabletransfer1= frappe.model.get_doc(\"Routing\", frm.doc.routing);\n                      // console.log(tabletransfer1);\n                        $.each(tabletransfer1.operations, function(index, row){\n                            var d = frm.add_child(\"operations_table\");\n                            d.operation = row.operation;\n                            d.workstation_type = row.workstation_type;\n                            d.workstation = row.workstation;\n                            d.fixed_time = row.fixed_time;\n                            d.operating_cost = row.operating_cost;\n                            \n                            frm.refresh_field(\"operations_table\");\n                            \n                        });\n                    \n                });\n            }\n            else  {\n                frm.clear_table(\"operations_table\");\n                frm.refresh_field(\"operations_table\");\n            }\n            \n    }\n    \n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "CARPET  DETAILS",
  "enabled": 1,
  "modified": "2023-02-28 11:38:24.927846",
  "module": null,
  "name": "Carpet details to fetch child table",
  "script": "frappe.ui.form.on(\"CARPET  DETAILS\", {\n    \n    \"routing\": function(frm) {\n        frm.clear_table(\"operations_table\");\n        frm.refresh_field(\"operations_table\");\n         //console.log(frm.doc.name1);\n            if(frm.doc.routing){\n                \n                frappe.model.with_doc(\"Routing\", frm.doc.routing, function() {\n                   \n                        var tabletransfer1= frappe.model.get_doc(\"Routing\", frm.doc.routing);\n                      // console.log(tabletransfer1);\n                        $.each(tabletransfer1.operations, function(index, row){\n                            var d = frm.add_child(\"operations_table\");\n                            d.operation = row.operation;\n                            d.workstation_type = row.workstation_type;\n                            d.workstation = row.workstation;\n                            d.fixed_time = row.fixed_time;\n                            d.operating_cost = row.operating_cost;\n                            frm.refresh_field(\"operations_table\");\n                            \n                        });\n                    \n                });\n            }\n            else  {\n                frm.clear_table(\"operations_table\");\n                frm.refresh_field(\"operations_table\");\n            }\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "CARPET  DETAILS",
  "enabled": 1,
  "modified": "2023-02-28 12:21:24.519667",
  "module": null,
  "name": "Routing fetch from BOM in Carpet Details",
  "script": "cur_frm.add_fetch('bom','routing','routing')",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "COVERS  DETAILS",
  "enabled": 1,
  "modified": "2023-02-28 14:44:33.064322",
  "module": null,
  "name": "Routing fetch from BOM in Cover Details",
  "script": "cur_frm.add_fetch('bom','routing','routing')",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "DECALS  DETAILS",
  "enabled": 1,
  "modified": "2023-02-28 15:03:12.648540",
  "module": null,
  "name": "Decals details to fetch child table",
  "script": "frappe.ui.form.on(\"DECALS  DETAILS\", {\n    \n    \"routing\": function(frm) {\n        \n        frm.clear_table(\"operations_table\");\n        frm.refresh_field(\"operations_table\");\n         //console.log(frm.doc.name1);\n            if(frm.doc.routing){\n                \n                frappe.model.with_doc(\"Routing\", frm.doc.routing, function() {\n                   \n                        var tabletransfer1= frappe.model.get_doc(\"Routing\", frm.doc.routing);\n                      // console.log(tabletransfer1);\n                        $.each(tabletransfer1.operations, function(index, row){\n                            var d = frm.add_child(\"operations_table\");\n                            d.operation = row.operation;\n                            d.workstation_type = row.workstation_type;\n                            d.workstation = row.workstation;\n                            d.fixed_time = row.fixed_time;\n                            d.operating_cost = row.operating_cost;\n                            \n                            frm.refresh_field(\"operations_table\");\n                            \n                        });\n                    \n                });\n            }\n            else  {\n                frm.clear_table(\"operations_table\");\n                frm.refresh_field(\"operations_table\");\n            }\n            \n    }\n    \n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "DECALS  DETAILS",
  "enabled": 1,
  "modified": "2023-02-28 15:04:24.402248",
  "module": null,
  "name": "Routing fetch from BOM in Decals Details",
  "script": "cur_frm.add_fetch('bom','routing','routing')",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "COMPOSITE AND METALS  DETAILS",
  "enabled": 1,
  "modified": "2023-02-28 15:08:28.842632",
  "module": null,
  "name": "Routing fetch from BOM in Composition and Metals Details",
  "script": "cur_frm.add_fetch('bom','routing','routing')",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "COMPOSITE AND METALS  DETAILS",
  "enabled": 1,
  "modified": "2023-02-28 15:10:20.217553",
  "module": null,
  "name": "Composition and Metals details to fetch child table",
  "script": "frappe.ui.form.on(\"COMPOSITE AND METALS  DETAILS\", {\n    \n    \"routing\": function(frm) {\n        \n        frm.clear_table(\"operations_table\");\n        frm.refresh_field(\"operations_table\");\n         //console.log(frm.doc.name1);\n            if(frm.doc.routing){\n                \n                frappe.model.with_doc(\"Routing\", frm.doc.routing, function() {\n                   \n                        var tabletransfer1= frappe.model.get_doc(\"Routing\", frm.doc.routing);\n                      // console.log(tabletransfer1);\n                        $.each(tabletransfer1.operations, function(index, row){\n                            var d = frm.add_child(\"operations_table\");\n                            d.operation = row.operation;\n                            d.workstation_type = row.workstation_type;\n                            d.workstation = row.workstation;\n                            d.fixed_time = row.fixed_time;\n                            d.operating_cost = row.operating_cost;\n                            \n                            frm.refresh_field(\"operations_table\");\n                            \n                        });\n                    \n                });\n            }\n            else  {\n                frm.clear_table(\"operations_table\");\n                frm.refresh_field(\"operations_table\");\n            }\n            \n    }\n    \n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Order",
  "enabled": 0,
  "modified": "2023-03-02 18:10:07.112931",
  "module": null,
  "name": "color on add btn sales order",
  "script": "//frappe.ui.form.on('Sales Order', {\n    //refresh: function(frm) {\n      //   cur_frm.page.set_inner_btn_group_color(__('Add Row'), 'btn-success');\n    //    cur_frm.page.inner_button_group.find('.btn btn-primary btn-sm primary-action').removeClass('btn btn-primary btn-sm primary-action').addClass('btn-success');\n  //  }\n//});\n\n//frappe.ui.form.on('Sales Order', {\n   // refresh: function(frm) {\n  //      cur_frm.page.set_inner_btn_group_color(__('Add Row'), '#00B300 !important');\n  //      cur_frm.page.inner_button_group.find('btn btn-primary btn-sm primary-action').css('background-color', '#00B300 !important');\n  //  }\n//});\nfrappe.ui.form.on('Sales Order', {\n   \n    refresh: function(frm) {\n        cur_frm.page.set_inner_btn_group_color(__('Add Row'), '#00B300 !important');\n        cur_frm.page.inner_button_group.find('.grid-add-row').css('background-color', '#00B300 !ipmortant');\n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Repair Note 1",
  "enabled": 1,
  "modified": "2023-03-03 12:33:32.181411",
  "module": null,
  "name": "remove Pdf button",
  "script": "frappe.ui.form.on('Repair Note 1', {\n    refresh(frm) {\n    setTimeout(() => {\n        frm.remove_custom_button('PDF');\n        \n        }, 10);\n    }\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "TEst for calculation s",
  "enabled": 1,
  "modified": "2023-03-06 15:29:19.290692",
  "module": null,
  "name": "calculation",
  "script": "frappe.ui.form.on(\"calculation child table\", {\n    number_1: function(frm, cdt, cdn) {\n        console.log(\"number_1 field updated\");\n        var child = locals[cdt][cdn];\n        var value1 = child.number_1;\n        var value2 = child.number_2 / 100;\n       // var result = parseInt(value1) * parseInt(value2);\n       var result = value1 * value2\n        frappe.model.set_value(cdt, cdn, \"final_calculation\", result);\n    },\n    number_2: function(frm, cdt, cdn) {\n        console.log(\"number_2 field updated\");\n        var child = locals[cdt][cdn];\n        var value1 = child.number_1;\n        var value2 = child.number_2 / 100;\n       var result = value1 * value2\n       // var result = parseInt(value1) * parseInt(value2);\n        frappe.model.set_value(cdt, cdn, \"final_calculation\", result);\n    },\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Quotation",
  "enabled": 1,
  "modified": "2023-03-09 10:51:13.412030",
  "module": null,
  "name": "Quotation",
  "script": "frappe.ui.form.on(\"Quotation Item\", {\n    amount: function(frm, cdt, cdn) {\n        //console.log(\"number_1 field updated\");\n        var child = locals[cdt][cdn];\n        var value1 = child.amount;\n        var value2 = child.gst / 100;\n      //  var result = parseInt(value1) * parseInt(value2);\n       var result = value1 * value2;\n        frappe.model.set_value(cdt, cdn, \"gst_amount\", result);\n    },\n    gst: function(frm, cdt, cdn) {\n      //  console.log(\"number_2 field updated\");\n        var child = locals[cdt][cdn];\n        var value1 = child.amount;\n        var value2 = child.gst / 100;\n       var result = value1 * value2;\n       // var result = parseInt(value1) * parseInt(value2);\n        frappe.model.set_value(cdt, cdn, \"gst_amount\", result);\n    },\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Quotation",
  "enabled": 1,
  "modified": "2023-03-06 17:28:02.547430",
  "module": null,
  "name": "total amount calculation in Quotation",
  "script": "frappe.ui.form.on('Quotation Item', {\n  gst_amount: function(frm, cdt, cdn) {\n    var total_gst = 0;\n    frm.doc.items.forEach(function(item) {\n      total_gst += item.gst_amount;\n    });\n    frm.set_value('total_gst', total_gst);\n  }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Quotation",
  "enabled": 1,
  "modified": "2023-03-06 17:51:20.529197",
  "module": null,
  "name": "Calclate grand Total In Quotation",
  "script": "frappe.ui.form.on(\"Quotation\", {\n    total: function(frm) {\n        frm.set_value(\"grand_total_with_gst\", frm.doc.total + frm.doc.total_gst);\n    },\n    total_gst: function(frm) {\n        frm.set_value(\"grand_total_with_gst\", frm.doc.total + frm.doc.total_gst);\n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Quotation",
  "enabled": 1,
  "modified": "2023-03-07 13:44:38.765622",
  "module": null,
  "name": "Grand Total existing update",
  "script": "frappe.ui.form.on(\"Quotation\", {\n    total: function(frm) {\n        frm.set_value(\"grand_total\", frm.doc.total + frm.doc.total_gst);\n    },\n    total_gst: function(frm) {\n        frm.set_value(\"grand_total\", frm.doc.total + frm.doc.total_gst);\n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Quotation",
  "enabled": 1,
  "modified": "2023-03-10 12:18:45.430250",
  "module": null,
  "name": "grand total with GST in words",
  "script": "//frappe.ui.form.on('Quotation', {\n   // grand_total_with_gst: function(frm) {\n     //   console.log(\"Grand Total with GST changed\");\n   //     console.log(\"Amount: \", frm.doc.grand_total_with_gst);\n   //     var in_words = Inwords(frm.doc.grand_total_with_gst);\n    // in_words = frappe.utils.money_in_words(frm.doc.grand_total_with_gst);\n  //      console.log(\"In Words: \", in_words);\n       // frm.set_value(\"in_words_gst\", in_words);\n //   }\n//});\n\n\n\nfrappe.ui.form.on('Quotation', {\n    grand_total_with_gst: function(frm) {\n        var amount = frm.doc.grand_total_with_gst;\n        var inWords = InWords(amount);\n        frm.set_value('in_words_gst', inWords);\n    }\n});\n\n\n\nfunction InWords(price) {\n    var sglDigit = [\"Zero\", \"One\", \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"],\n    dblDigit = [\"Ten\", \"Eleven\", \"Twelve\", \"Thirteen\", \"Fourteen\", \"Fifteen\", \"Sixteen\", \"Seventeen\", \"Eighteen\", \"Nineteen\"],\n    tensPlace = [\"\", \"Ten\", \"Twenty\", \"Thirty\", \"Forty\", \"Fifty\", \"Sixty\", \"Seventy\", \"Eighty\", \"Ninety\"],\n    handle_tens = function(dgt, prevDgt) {\n      return 0 == dgt ? \"\" : \" \" + (1 == dgt ? dblDigit[prevDgt] : tensPlace[dgt])\n    },\n    handle_utlc = function(dgt, nxtDgt, denom) {\n      return (0 != dgt && 1 != nxtDgt ? \" \" + sglDigit[dgt] : \"\") + (0 != nxtDgt || dgt > 0 ? \" \" + denom : \"\")\n    };\n\n  var str = \"\",\n    digitIdx = 0,\n    digit = 0,\n    nxtDigit = 0,\n    words = [];\n  if (price += \"\", isNaN(parseInt(price))) str = \"\";\n  else if (parseInt(price) > 0 && price.length <= 10) {\n    for (digitIdx = price.length - 1; digitIdx >= 0; digitIdx--) switch (digit = price[digitIdx] - 0, nxtDigit = digitIdx > 0 ? price[digitIdx - 1] - 0 : 0, price.length - digitIdx - 1) {\n      case 0:\n        words.push(handle_utlc(digit, nxtDigit, \"\"));\n        break;\n      case 1:\n        words.push(handle_tens(digit, price[digitIdx + 1]));\n        break;\n      case 2:\n        words.push(0 != digit ? \" \" + sglDigit[digit] + \" Hundred\" + (0 != price[digitIdx + 1] && 0 != price[digitIdx + 2] ? \" and\" : \"\") : \"\");\n        break;\n      case 3:\n        words.push(handle_utlc(digit, nxtDigit, \"Thousand\"));\n        break;\n      case 4:\n        words.push(handle_tens(digit, price[digitIdx + 1]));\n        break;\n      case 5:\n        words.push(handle_utlc(digit, nxtDigit, \"Lakh\"));\n        break;\n      case 6:\n        words.push(handle_tens(digit, price[digitIdx + 1]));\n        break;\n      case 7:\n        words.push(handle_utlc(digit, nxtDigit, \"Crore\"));\n        break;\n      case 8:\n        words.push(handle_tens(digit, price[digitIdx + 1]));\n        break;\n      case 9:\n        words.push(0 != digit ? \" \" + sglDigit[digit] + \" Hundred\" + (0 != price[digitIdx + 1] || 0 != price[digitIdx + 2] ? \" and\" : \" Crore\") : \"\" )\n    }\n    str = words.reverse().join(\"\")\n  } else str = \"\";\n  return str + \"Only\"\n}\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Order",
  "enabled": 1,
  "modified": "2023-03-23 11:24:25.674895",
  "module": null,
  "name": "Sales Order Item Details from repair Note",
  "script": "frappe.ui.form.on(\"Sales Order\", {\n    \n    \"repair_note\": function(frm) {\n        \n        frm.clear_table(\"items\");\n        frm.refresh_field(\"items\");\n         //console.log(frm.doc.name1);\n            if(frm.doc.repair_note){\n                \n                frappe.model.with_doc(\"Repair Note 1\", frm.doc.repair_note, function() {\n                   \n                        var tabletransfer1= frappe.model.get_doc(\"Repair Note 1\", frm.doc.repair_note);\n                      // console.log(tabletransfer1);\n                        $.each(tabletransfer1.repair_note_table, function(index, row){\n                            var d = frm.add_child(\"items\");\n                            d.item_name = row.item_name__description;\n                            d.ro_ext_detail = row.ro_ext_details;\n                            d.qty = row.qty;\n                            d.ro_ext_date = row.ro_ext_date;\n                            d.uom = row.uom;\n                            d.item_code = row.partno.replace('RN-', '');       // to choose product in the child table instead service item\n                          //  d.description = row.description;\n                            frm.refresh_field(\"items\");\n                            \n                        });\n                    \n                });\n            }\n            else  {\n                frm.clear_table(\"items\");\n                frm.refresh_field(\"items\");\n            }\n            \n    }\n    \n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Quotation",
  "enabled": 1,
  "modified": "2023-03-10 17:30:49.024818",
  "module": null,
  "name": "Fetch quotation items from repair note",
  "script": "frappe.ui.form.on(\"Quotation\", {\n    \n    \"repair_note\": function(frm) {\n        \n        frm.clear_table(\"items\");\n        frm.refresh_field(\"items\");\n         //console.log(frm.doc.name1);\n            if(frm.doc.repair_note){\n                \n                frappe.model.with_doc(\"Repair Note 1\", frm.doc.repair_note, function() {\n                   \n                        var tabletransfer1= frappe.model.get_doc(\"Repair Note 1\", frm.doc.repair_note);\n                      // console.log(tabletransfer1);\n                        $.each(tabletransfer1.repair_note_table, function(index, row){\n                            var d = frm.add_child(\"items\");\n                            d.item_name = row.item_name__description;\n                            d.customer_reference = row.ro_ext_details;\n                            d.qty = row.qty;\n                            d.customer_reference_date = row.ro_ext_date;\n                            d.uom = row.uom;\n                            d.item_code = row.partno;\n                            d.rate = row.price;\n                            d.serial_or_batch_no = row.serial_no;\n                            \n                            frm.refresh_field(\"items\");\n                            \n                        });\n                    \n                });\n            }\n            else  {\n                frm.clear_table(\"items\");\n                frm.refresh_field(\"items\");\n            }\n            \n    }\n    \n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Quotation",
  "enabled": 1,
  "modified": "2023-03-13 11:06:00.368040",
  "module": null,
  "name": "trigger quotation",
  "script": "frappe.ui.form.on('Quotation', {\n\t\trepair_note: function(frm){\n\t    console.log(frm)\n\t}\n})\n\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Item",
  "enabled": 0,
  "modified": "2023-03-14 12:18:58.535214",
  "module": null,
  "name": "VASPL partno Naming series",
  "script": "\nfrappe.ui.form.on('Item', {\n\t//refresh(frm) {\n// console.log(frm);\n\t\t//cur_frm.cscript.custom_validate = function(doc) {\n\t\titem_group : function(frm){\n\t\t    //frm.refresh_field(\"vaspl_part_no_series\");\n    \n    frm.doc.vaspl_part_no = \"\";\n\n    console.log(frm);\n    var series=\"XX\";\n    switch(frm.doc.item_group) {\n        case \"Products\":\n           // doc.vaspl_part_no_series = \"VAS01010101\";\n             series=\"VAS01\";\n             //frm.refresh_field(\"vaspl_part_no_series\");\n            break;\n        case \"Services\":\n            series=\"VAS02\";\n            //frm.doc.vaspl_part_no_series = \"VAS02\";\n             //frm.refresh_field(\"vaspl_part_no_series\");\n            break;\n    }\n    frm.set_value(\"vaspl_part_no_series\", series);\n             var Id=GenerateId(series);\n             frm.set_value(\"vaspl_part_no\", Id);\n//}\n\t}\n\n\t\n});\nfunction GenerateId(initialString, empId = '') {\n    var dateStr = new Date().yyMMddHHmmssfff();\n    var id = initialString +\" - \" + empId + dateStr ;\n    return id;\n    \n}\nObject.defineProperty(Date.prototype, 'yyMMddHHmmssfff', {\n    value: function () {\n        function pad2(n) {  // always returns a string\n            return (n < 10 ? '0' : '') + n;\n        }\n\n        return this.getFullYear().toString().substr(2,2) +\n            pad2(this.getMonth() + 1) +\n            pad2(this.getDate()) +\n            pad2(this.getHours()) +\n            pad2(this.getMinutes()) +\n            pad2(this.getSeconds()) +\n            this.getMilliseconds().toString().substr(0, 3);\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Item",
  "enabled": 0,
  "modified": "2023-03-13 19:14:34.567619",
  "module": null,
  "name": "Generate a random string on Item (vaspl_part_no)",
  "script": "\nfrappe.ui.form.on('Item', {\n    vaspl_part_no_series: function (frm) {\n        GenerateId(frm.doc.vaspl_part_no);\n    }\n});\n\n   function GenerateId(initialString, empId = '') {\n    var dateStr = new Date().yyMMddHHmmssfff();\n    var id = initialString + empId + dateStr;\n    return id;\n    \n}\nObject.defineProperty(Date.prototype, 'yyMMddHHmmssfff', {\n    value: function () {\n        function pad2(n) {  // always returns a string\n            return (n < 10 ? '0' : '') + n;\n        }\n\n        return this.getFullYear().toString().substr(2,2) +\n            pad2(this.getMonth() + 1) +\n            pad2(this.getDate()) +\n            pad2(this.getHours()) +\n            pad2(this.getMinutes()) +\n            pad2(this.getSeconds()) +\n            this.getMilliseconds().toString().substr(0, 3);\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Item",
  "enabled": 0,
  "modified": "2023-03-13 18:52:11.642201",
  "module": null,
  "name": "naming series1",
  "script": "//frappe.ui.form.on('Item', {\n  //refresh(frm) {\n //  cur_frm.cscript.custom_validate = function(doc) {\n      //doc.vaspl_part_no = \"\";\n\n     // switch(doc.item_group) {\n     //   case \"Products\":\n      //    doc.vaspl_part_no_series = \"VAS01\";\n       //   frm.set_value(\"vaspl_part_no_series\", \"VAS01\");\n       //   break;\n       // case \"Services\":\n       //   doc.vaspl_part_no_series = \"VAS02\";\n       //   frm.set_value(\"vaspl_part_no_series\", \"VAS02\");\n        //  break;\n       // default:\n       //   doc.vaspl_part_no_series = \"XX\";\n       //   frm.set_value(\"vaspl_part_no_series\", \"XX\");\n     // }\n      \n    //  frm.refresh_field(\"vaspl_part_no_series\");\n   // }\n  //}\n//}///);\n\nfrappe.ui.form.on('Item', 'item_group', function(frm) {\n    switch(doc.item_group) {\n        case \"Products\":\n          doc.vaspl_part_no_series = \"VAS01\";\n          frm.set_value(\"vaspl_part_no_series\", \"VAS01\");\n          break;\n    }\n  frm.trigger('refresh');\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Item",
  "enabled": 0,
  "modified": "2023-03-20 12:20:45.583100",
  "module": null,
  "name": "unique id in item",
  "script": "\nfrappe.ui.form.on('Item', 'item_group',  function(frm){\n\t\t    \n    frm.doc.vaspl_part_no = \"\";\n\n    \n    var series=\"XX\";\n    switch(frm.doc.item_group) {\n        case \"Products\":\n           // doc.vaspl_part_no_series = \"VAS01010101\";\n             series=\"VAS01\";\n             //frm.refresh_field(\"vaspl_part_no_series\");\n            break;\n            \n        case \"Services\":\n            series=\"VAS02\";\n            //frm.doc.vaspl_part_no_series = \"VAS02\";\n             //frm.refresh_field(\"vaspl_part_no_series\");\n            break;\n            \n            case \"MOONMAT & FLOORMAT\":\n            series=\"VAC01\";\n            break;\n            \n            case \"LEATHER\":\n            series=\"VAC02\";\n            break;\n             \n            case \"FABRIC\":\n            series=\"VAC03\";\n            break;\n            \n            case \"PVC\":\n            series=\"VAC04\";\n            break;\n            \n            case \"MISCELLENEOUS RAW MATERIAL\":\n            series=\"VAC05\";\n            break;\n            \n            case \"CARPET\":\n            series=\"VAC06\";\n            break;\n            \n            case \"CARPET ASSY\":\n            series=\"VAC07\";\n            break;\n            \n            case \"seat\":                       //handle upper case and lower case \n            case \"SEAT\":\n            series=\"VAC08\";\n            break;\n            \n            case \"LEATHER SEAT COVERS\":\n            series=\"VAC09\";\n            break;\n            \n            case \"FABRIC SEAT COVER\":\n            series=\"VAC10\";\n            break;\n            \n            case \"FABRIC SEAT COVER\":\n            series=\"VAC10\";\n            break;\n            \n            case \"CURTAINS\":\n            series=\"VAC11\";\n            break;\n            \n            case \"MEDICAL KIT/PRODUCT\":\n            series=\"VAC12\";\n            break;\n            \n            case \"UPHOLESTRY PANELS\":\n            series=\"VAC13\";\n            break;\n            \n            case \"UPHOLESTRY PANELS\":\n            series=\"VAC13\";\n            break;\n            \n            case \"PLASTIC PANELS\":\n            series=\"VAC14\";\n            break;\n            \n            case \"METAL PARTS\":\n            series=\"VAC15\";\n            break;\n            \n            case \"BLANKINGS\":\n            series=\"VAC16\";\n            break;\n            \n            case \"SAFETY NET\":\n            series=\"VAC18\";\n            break;\n            \n            case \"DECALS & PLACARD\":\n            series=\"VAC19\";\n            break;\n            \n            case \"VENEER/WOOD WORK\":\n            series=\"VAC20\";\n            break;\n            \n            case \"VENEER/WOOD WORK\":\n            series=\"VAC20\";\n            break;\n            \n            case \"LABELS\":\n            series=\"VAC21\";\n            break;\n            \n            case \"ROOMS\":\n            series=\"VAC22\";\n            break;\n            \n            case \"STORAGE FIXTURES\":\n            series=\"VAC23\";\n            break;\n            \n            case \"TOOLS\":\n            series=\"VAC24\";\n            break;\n            \n            case \"MACHINES\":\n            series=\"VAC25\";\n            break;\n            \n            case \"COMPUTER DEVICES & EQUIPMENT\":\n            series=\"VAC26\";\n            break;\n    }\n    frm.set_value(\"vaspl_part_no_series\", series);\n           var Id=GenerateId(series);\n           frm.set_value(\"vaspl_part_no\", Id);\n//}\n\t\n\n\t\n});\n\n\n//1st code\n//let counter = \"\";\n//function generateUniqueCode(series) {\n  //return `${prefix} - CODE_${++counter}`; // generates a unique code like 'CODE_1', 'CODE_2', etc.\n  //return `${series}-0000${++counter}`;\n//}\n\n\n//2nd code\n//let counter = 0;\n//let lastSeries = '';\n\n//function GenerateId(series) {\n // if (lastSeries !== series) {\n //   counter = 0;\n  //  lastSeries = series;\n // }\n // return `${series}-0000${++counter}`;\n//}\n\n\n//3th code\n\nconst seriesCounters = {};\n\nfunction GenerateId(series) {\n  if (!seriesCounters[series]) {\n    seriesCounters[series] = 0;\n  }\n  const counter = ++seriesCounters[series];\n  const paddedCounter = counter.toString().padStart(4, '0');\n  return `${series}-${paddedCounter}`;}\n\n//function GenerateId(initialString, empId = '') {\n  //  var dateStr = new Date().yyMMddHHmmssfff();\n   // var id = initialString +\"-\" + empId + dateStr ;\n   // return id;\n    \n//}\n//Object.defineProperty(Date.prototype, 'yyMMddHHmmssfff', {\n    //value: function () {\n   //     function pad2(n) {  // always returns a string\n        //    return (n < 10 ? '0' : '') + n;\n      // }\n\n       // return this.getFullYear().toString().substr(2,2) +\n          //  pad2(this.getMonth() + 1) +\n          //  pad2(this.getDate()) +\n         //   pad2(this.getHours()) +\n        //    pad2(this.getMinutes()) +\n        //    pad2(this.getSeconds()) +\n        //    this.getMilliseconds().toString().substr(0, 3);\n    //}\n    \n//});\n\n// Fetch RD part no in Item when select Vaspl part no //\ncur_frm.add_fetch('vaspl_part_no','rd_part_no','rd_part_no');\n\n\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Repair Note 1",
  "enabled": 0,
  "modified": "2023-03-14 16:53:21.327021",
  "module": null,
  "name": "EMPLOYEE NAME INSTEAD OF ID",
  "script": "frappe.ui.form.on('Repair Note 1', {\n    received_by_name: function(frm) {\n        frappe.call({\n            method: 'frappe.client.get_list',\n            args: {\n                doctype: 'Employee',\n                fields: ['name', 'employee_name'],\n            },\n            callback: function(response) {\n                var options = $.map(response.message, function(item) {\n                    var name_parts = item.employee_name.split(\" \");\n                    var first_name = name_parts[0];\n                    var last_name = name_parts[name_parts.length - 1];\n                    var label = first_name + ' ' + last_name;\n                    return {label: label, value: item.name};\n                });\n                frm.set_df_property('received_by_name', 'options', options);\n            }\n        });\n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Item",
  "enabled": 0,
  "modified": "2023-03-15 14:54:13.748374",
  "module": null,
  "name": "unique code using validate function Item doc",
  "script": "frappe.ui.form.on(\"Item\", \"item_group\", {\n    validate: function(frm) {\n        \n        frm.doc.vaspl_part_no = \"\";\n          var series=\"XX\";\n    switch(frm.doc.item_group) {\n        case \"Products\":\n           // doc.vaspl_part_no_series = \"VAS01010101\";\n             series=\"VAS01\";\n             //frm.refresh_field(\"vaspl_part_no_series\");\n            break;\n            \n        case \"Services\":\n            series=\"VAS02\";\n            //frm.doc.vaspl_part_no_series = \"VAS02\";\n             //frm.refresh_field(\"vaspl_part_no_series\");\n            break;\n    }\n    \n        frm.set_value(\"vaspl_part_no_series\", series);\n             var Id=GenerateId(series);\n             frm.set_value(\"vaspl_part_no\", Id);\n             \n             \n             \n             function GenerateId(series) {\n  if (!seriesCounters[series]) {\n    seriesCounters[series] = 0;\n  }\n  const counter = ++seriesCounters[series];\n  const paddedCounter = counter.toString().padStart(4, '0');\n  return `${series}-${paddedCounter}`;\n}\n        \n    },\n    \n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "R and D",
  "enabled": 1,
  "modified": "2023-03-15 16:27:16.348731",
  "module": null,
  "name": "R&D Operations fetch from Routing",
  "script": "frappe.ui.form.on(\"R and D\", {\n    \n    \"routing\": function(frm) {\n        \n        frm.clear_table(\"operations_table\");\n        frm.refresh_field(\"operations_table\");\n         //console.log(frm.doc.name1);\n            if(frm.doc.routing){\n                \n                frappe.model.with_doc(\"Routing\", frm.doc.routing, function() {\n                   \n                        var tabletransfer1= frappe.model.get_doc(\"Routing\", frm.doc.routing);\n                      // console.log(tabletransfer1);\n                        $.each(tabletransfer1.operations, function(index, row){\n                            var d = frm.add_child(\"operations_table\");\n                            d.operation = row.operation;\n                            d.workstation_type = row.workstation_type;\n                            d.workstation = row.workstation;\n                            d.fixed_time = row.fixed_time;\n                            d.operating_cost = row.operating_cost;\n                            \n                            frm.refresh_field(\"operations_table\");\n                            \n                        });\n                    \n                });\n            }\n            else  {\n                frm.clear_table(\"operations_table\");\n                frm.refresh_field(\"operations_table\");\n            }\n            \n    }\n    \n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Drawing Link",
  "enabled": 0,
  "modified": "2023-03-16 17:33:04.010760",
  "module": null,
  "name": "Drawing Link fetch from Routing",
  "script": "frappe.ui.form.on(\"Drawing Link\", {\n    \n    \"routing\": function(frm) {\n        \n        frm.clear_table(\"operations_table\");\n        frm.refresh_field(\"operations_table\");\n         //console.log(frm.doc.name1);\n            if(frm.doc.routing){\n                \n                frappe.model.with_doc(\"Routing\", frm.doc.routing, function() {\n                   \n                        var tabletransfer1= frappe.model.get_doc(\"Routing\", frm.doc.routing);\n                      // console.log(tabletransfer1);\n                        $.each(tabletransfer1.operations, function(index, row){\n                            var d = frm.add_child(\"operations_table\");\n                            d.operation = row.operation;\n                            d.workstation_type = row.workstation_type;\n                            d.workstation = row.workstation;\n                            d.fixed_time = row.fixed_time;\n                            d.operating_cost = row.operating_cost;\n                            \n                            frm.refresh_field(\"operations_table\");\n                            \n                        });\n                    \n                });\n            }\n            else  {\n                frm.clear_table(\"operations_table\");\n                frm.refresh_field(\"operations_table\");\n            }\n            \n    }\n    \n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "RD Part No",
  "enabled": 1,
  "modified": "2023-03-16 15:03:59.507350",
  "module": null,
  "name": "VASPL Part No fetch from Routing",
  "script": "frappe.ui.form.on(\"VASPL Part No\", {\n    \n    \"routing\": function(frm) {\n        \n        frm.clear_table(\"operations_table\");\n        frm.refresh_field(\"operations_table\");\n         //console.log(frm.doc.name1);\n            if(frm.doc.routing){\n                \n                frappe.model.with_doc(\"Routing\", frm.doc.routing, function() {\n                   \n                        var tabletransfer1= frappe.model.get_doc(\"Routing\", frm.doc.routing);\n                      // console.log(tabletransfer1);\n                        $.each(tabletransfer1.operations, function(index, row){\n                            var d = frm.add_child(\"operations_table\");\n                            d.operation = row.operation;\n                            d.workstation_type = row.workstation_type;\n                            d.workstation = row.workstation;\n                            d.fixed_time = row.fixed_time;\n                            d.operating_cost = row.operating_cost;\n                            \n                            frm.refresh_field(\"operations_table\");\n                            \n                        });\n                    \n                });\n            }\n            else  {\n                frm.clear_table(\"operations_table\");\n                frm.refresh_field(\"operations_table\");\n            }\n            \n    }\n    \n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "RD Part No",
  "enabled": 1,
  "modified": "2023-03-16 15:48:36.371708",
  "module": null,
  "name": "RD Part Number Operations fetch from Routing",
  "script": "frappe.ui.form.on(\"RD Part No\", {\n    \n    \"routing\": function(frm) {\n        \n        frm.clear_table(\"operations_table\");\n        frm.refresh_field(\"operations_table\");\n         //console.log(frm.doc.name1);\n            if(frm.doc.routing){\n                \n                frappe.model.with_doc(\"Routing\", frm.doc.routing, function() {\n                   \n                        var tabletransfer1= frappe.model.get_doc(\"Routing\", frm.doc.routing);\n                      // console.log(tabletransfer1);\n                        $.each(tabletransfer1.operations, function(index, row){\n                            var d = frm.add_child(\"operations_table\");\n                            d.operation = row.operation;\n                            d.workstation_type = row.workstation_type;\n                            d.workstation = row.workstation;\n                            d.fixed_time = row.fixed_time;\n                            d.operating_cost = row.operating_cost;\n                            \n                            frm.refresh_field(\"operations_table\");\n                            \n                        });\n                    \n                });\n            }\n            else  {\n                frm.clear_table(\"operations_table\");\n                frm.refresh_field(\"operations_table\");\n            }\n            \n    }\n    \n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "VASPL Part No",
  "enabled": 1,
  "modified": "2023-03-16 16:10:31.728301",
  "module": null,
  "name": "ID series for VASPL Part No",
  "script": "frappe.ui.form.on('VASPL Part No', 'item_group',  function(frm){\n\t\t    \n    frm.doc.vaspl_part_no_series = \"\";\n\n    \n    var series=\"XX\";\n    switch(frm.doc.item_group) {\n        case \"Products\":\n           // doc.vaspl_part_no_series = \"VAS01010101\";\n             series=\"VAS01\";\n             //frm.refresh_field(\"vaspl_part_no_series\");\n            break;\n            \n        case \"Services\":\n            series=\"VAS02\";\n            //frm.doc.vaspl_part_no_series = \"VAS02\";\n             //frm.refresh_field(\"vaspl_part_no_series\");\n            break;\n            \n            case \"MOONMAT & FLOORMAT\":\n            series=\"VAC01\";\n            break;\n            \n            case \"LEATHER\":\n            series=\"VAC02\";\n            break;\n             \n            case \"FABRIC\":\n            series=\"VAC03\";\n            break;\n            \n            case \"PVC\":\n            series=\"VAC04\";\n            break;\n            \n            case \"MISCELLENEOUS RAW MATERIAL\":\n            series=\"VAC05\";\n            break;\n            \n            case \"CARPET\":\n            series=\"VAC06\";\n            break;\n            \n            case \"CARPET ASSY\":\n            series=\"VAC07\";\n            break;\n            \n            case \"seat\":                       //handle upper case and lower case \n            case \"SEAT\":\n            series=\"VAC08\";\n            break;\n            \n            case \"LEATHER SEAT COVERS\":\n            series=\"VAC09\";\n            break;\n            \n            case \"FABRIC SEAT COVER\":\n            series=\"VAC10\";\n            break;\n            \n            case \"FABRIC SEAT COVER\":\n            series=\"VAC10\";\n            break;\n            \n            case \"CURTAINS\":\n            series=\"VAC11\";\n            break;\n            \n            case \"MEDICAL KIT/PRODUCT\":\n            series=\"VAC12\";\n            break;\n            \n            case \"UPHOLESTRY PANELS\":\n            series=\"VAC13\";\n            break;\n            \n            case \"UPHOLESTRY PANELS\":\n            series=\"VAC13\";\n            break;\n            \n            case \"PLASTIC PANELS\":\n            series=\"VAC14\";\n            break;\n            \n            case \"METAL PARTS\":\n            series=\"VAC15\";\n            break;\n            \n            case \"BLANKINGS\":\n            series=\"VAC16\";\n            break;\n            \n            case \"SAFETY NET\":\n            series=\"VAC18\";\n            break;\n            \n            case \"DECALS & PLACARD\":\n            series=\"VAC19\";\n            break;\n            \n            case \"VENEER/WOOD WORK\":\n            series=\"VAC20\";\n            break;\n            \n            case \"VENEER/WOOD WORK\":\n            series=\"VAC20\";\n            break;\n            \n            case \"LABELS\":\n            series=\"VAC21\";\n            break;\n            \n            case \"ROOMS\":\n            series=\"VAC22\";\n            break;\n            \n            case \"STORAGE FIXTURES\":\n            series=\"VAC23\";\n            break;\n            \n            case \"TOOLS\":\n            series=\"VAC24\";\n            break;\n            \n            case \"MACHINES\":\n            series=\"VAC25\";\n            break;\n            \n            case \"COMPUTER DEVICES & EQUIPMENT\":\n            series=\"VAC26\";\n            break;\n    }\n    frm.set_value(\"vaspl_part_no_series\", series);\n            // var Id=GenerateId(series);\n            // frm.set_value(\"vaspl_part_no\", Id);\n//}\n\t\n\n\n\n\n\n\n\n});\n\n\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Drawing Link",
  "enabled": 1,
  "modified": "2023-03-16 17:30:34.620467",
  "module": null,
  "name": "Drawing Link table fetch from R and D",
  "script": "frappe.ui.form.on(\"Drawing Link\", {\n    \n    \"rd_number\": function(frm) {\n        \n        frm.clear_table(\"r_d_part_no_table\");\n        frm.refresh_field(\"r_d_part_no_table\");\n         //console.log(frm.doc.name1);\n            if(frm.doc.rd_number){\n                \n                frappe.model.with_doc(\"R and D\", frm.doc.rd_number, function() {\n                   \n                        var tabletransfer1= frappe.model.get_doc(\"R and D\", frm.doc.rd_number);\n                      // console.log(tabletransfer1);\n                        $.each(tabletransfer1.r_d_part_no_details, function(index, row){\n                            var d = frm.add_child(\"r_d_part_no_table\");\n                            d.r_d_part_no = row.r_d_part_no;\n                            d.bom = row.bom;\n                            d.routing = row.routing;\n                            d.drawing_no = row.drawing_no;\n                            \n                            \n                            \n                            frm.refresh_field(\"r_d_part_no_table\");\n                            \n                        });\n                    \n                });\n            }\n            else  {\n                frm.clear_table(\"r_d_part_no_table\");\n                frm.refresh_field(\"r_d_part_no_table\");\n            }\n            \n    }\n    \n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Item",
  "enabled": 0,
  "modified": "2023-03-17 21:24:22.598164",
  "module": null,
  "name": "Fetch RD part no in Item",
  "script": "cur_frm.add_fetch('vaspl_part_no','rd_part_no','rd_part_no');",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Item",
  "enabled": 1,
  "modified": "2023-03-23 13:40:20.738411",
  "module": null,
  "name": "Update Unique code generation",
  "script": "frappe.ui.form.on('Item', 'item_group', function(frm) {\n    frm.doc.vaspl_part_no = \"\";\n\n    var series = \"XX\";\n    \n     frappe.db.get_value('Item Group',frm.doc.item_group,'vaspl_part_no_series')\n    .then(function(response){\n         \n        series = response.message.vaspl_part_no_series || \"\";\n        frm.set_value(\"vaspl_part_no_series\", series);\n            if(series===\"\"){\n                 frm.set_value(\"vaspl_part_no\", \"\");\n                 frm.refresh_field(\"vaspl_part_no\");\n                // frappe.ui.form.set_value(\"vaspl_part_no\", \"\");\n            }\n            else{\n                GenerateId(series, function(id) {\n                    frm.set_value(\"vaspl_part_no\", id);\n                });                \n            }\n     });\n     /*switch(frm.doc.item_group) {\n       // case \"Products\":\n         //   series = \"VAS01\";\n        //    break;\n       // case \"Services\":\n       //     series = \"VAS02\";\n       //     break;\n             case \"MOONMAT & FLOORMAT\":\n            series=\"VAC01\";\n            break;\n            \n            case \"LEATHER\":\n            series=\"VAC02\";\n            break;\n             \n            case \"FABRIC\":\n            series=\"VAC03\";\n            break;\n            \n            case \"PVC\":\n            series=\"VAC04\";\n            break;\n            \n            case \"MISCELLENEOUS RAW MATERIAL\":\n            series=\"VAC05\";\n            break;\n            \n            case \"CARPET\":\n            series=\"VAC06\";\n            break;\n            \n            case \"CARPET ASSY\":\n            series=\"VAC07\";\n            break;\n            \n            case \"seat\":                       //handle upper case and lower case \n            case \"SEAT\":\n            series=\"VAC08\";\n            break;\n            \n            case \"LEATHER SEAT COVERS\":\n            series=\"VAC09\";\n            break;\n            \n            case \"FABRIC SEAT COVER\":\n            series=\"VAC10\";\n            break;\n            \n            case \"FABRIC SEAT COVER\":\n            series=\"VAC10\";\n            break;\n            \n            case \"CURTAINS\":\n            series=\"VAC11\";\n            break;\n            \n            case \"MEDICAL KIT/PRODUCT\":\n            series=\"VAC12\";\n            break;\n            \n            case \"UPHOLESTRY PANELS\":\n            series=\"VAC13\";\n            break;\n            \n            case \"UPHOLESTRY PANELS\":\n            series=\"VAC13\";\n            break;\n            \n            case \"PLASTIC PANELS\":\n            series=\"VAC14\";\n            break;\n            \n            case \"METAL PARTS\":\n            series=\"VAC15\";\n            break;\n            \n            case \"BLANKINGS\":\n            series=\"VAC16\";\n            break;\n            \n            case \"SAFETY NET\":\n            series=\"VAC18\";\n            break;\n            \n            case \"DECALS & PLACARD\":\n            series=\"VAC19\";\n            break;\n            \n            case \"VENEER/WOOD WORK\":\n            series=\"VAC20\";\n            break;\n            \n            case \"VENEER/WOOD WORK\":\n            series=\"VAC20\";\n            break;\n            \n            case \"LABELS\":\n            series=\"VAC21\";\n            break;\n            \n            case \"ROOMS\":\n            series=\"VAC22\";\n            break;\n            \n            case \"STORAGE FIXTURES\":\n            series=\"VAC23\";\n            break;\n            \n            case \"TOOLS\":\n            series=\"VAC24\";\n            break;\n            \n            case \"MACHINES\":\n            series=\"VAC25\";\n            break;\n            \n            case \"COMPUTER DEVICES & EQUIPMENT\":\n            series=\"VAC26\";\n            break;\n            \n            case \"Products\":\n            series= \"PRO\";\n            break;\n            \n            case\"Services\":\n                series= \"SER\";\n                break;\n    }*/\n\n\n    function GenerateId(series, callback) {\n        var id;\n        frappe.db.get_list('Item', {\n            filters: {\n                vaspl_part_no: ['like', series + '%']\n            },\n            fields: ['vaspl_part_no'],\n            order_by: 'vaspl_part_no desc',\n            limit: 1\n        }).then(function(items) {\n            if (items.length > 0) {\n                //debugger;\n                var last_id = items[0].vaspl_part_no;\n                var last_num = parseInt(last_id.replace(series,\"\"));\n                id = series + pad(last_num + 1, 4);\n            } else {\n                id = series + '0001';\n            }\n            \n         \n            \n            callback(id);\n        });\n    }\n\n    function pad(num, size) {\n        var s = num + \"\";\n        while (s.length < size) s = \"0\" + s;\n        return s;\n    }\n}); ",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Item",
  "enabled": 1,
  "modified": "2023-03-21 15:53:47.292022",
  "module": null,
  "name": "vaspl drawing link unique code in item doctype",
  "script": "frappe.ui.form.on(\"Item\", {\r\n  item_group: function(frm) {\r\n    const series = frm.doc.item_group;\r\n    generateUniqueCode(uniqueCode => {\r\n      frm.set_value(\"vaspl_drawing_no\", uniqueCode);\r\n    });\r\n  }\r\n});\r\n\r\n\r\n\r\n//let counter = 0;\r\n\r\n//function generateUniqueCode(callback) {\r\n  //const prefix = \"VASPL/ED\";\r\n  //frappe.db.get_list('Item', {\r\n//      filters: {\r\n            //    vaspl_drawing_no: ['like', '${prefix}/%']\r\n          //  },\r\n        //    fields: ['vaspl_drawing_no'],\r\n      //      order_by: 'vaspl_drawing_no desc',\r\n    //        limit: 1\r\n  //}).then(existingItems => {\r\n//    if (existingItems.length > 0) {\r\n      //const lastCode = existingItems[0].vaspl_drawing_no;\r\n      //counter = Number(lastCode.substr(lastCode.length - 5)) + 1;\r\n    //} else {\r\n    //  counter = 1;\r\n  //  }\r\n//    const code = String(counter).padStart(5, '0'); // pads the number with leading zeros up to 5 digits\r\n    //const uniqueCode = `${prefix}/${code}`;\r\n    //callback(uniqueCode);\r\n  //});\r\n//}\r\n\r\nlet counter = 0;\r\nlet promise = Promise.resolve();\r\n\r\nfunction generateUniqueCode(callback) {\r\n  const prefix = \"VASPL/ED\";\r\n  \r\n  // Add the Promise to ensure that the counter is incremented only once for each call\r\n  promise = promise.then(() => {\r\n    return frappe.db.get_list('Item', {\r\n      filters: {\r\n        vaspl_drawing_no: ['like', `${prefix}/%`]\r\n      },\r\n      fields: ['vaspl_drawing_no'],\r\n      order_by: 'vaspl_drawing_no desc',\r\n      limit: 1\r\n    });\r\n  }).then(existingItems => {\r\n    if (existingItems.length > 0) {\r\n      const lastCode = existingItems[0].vaspl_drawing_no;\r\n      counter = Number(lastCode.substr(lastCode.length - 5)) + 1;\r\n    } else {\r\n      counter++;\r\n    }\r\n    const code = String(counter).padStart(5, '0'); // pads the number with leading zeros up to 5 digits\r\n    const uniqueCode = `${prefix}/${code}`;\r\n    callback(uniqueCode);\r\n  });\r\n  //.catch(error => {\r\n    //console.log(error);\r\n  //});\r\n}\r\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Repair Note 1",
  "enabled": 0,
  "modified": "2023-03-22 12:54:27.544195",
  "module": null,
  "name": "only service item in repair note 1",
  "script": "frappe.ui.form.on('Repair Note 1', {\n    onload_post_render: function(frm) {                                           // also we can use refresh insted of onload_post_render\n        // get the child table\n        var repair_note_table = frm.fields_dict['repair_note_table'].grid;\n\n        // iterate through each row in the child table\n        repair_note_table.grid_rows.forEach(function(row) {\n            // get the part no field\n            var part_no_field = row.get_field('partno');\n\n            // set the query for the part no field to only show service items\n            part_no_field.get_query = function() {\n                return {\n                    filters: {\n                        \"item_group\": \"Service\"\n                    }\n                }\n            };\n        });\n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Order",
  "enabled": 0,
  "modified": "2023-03-22 16:38:18.168908",
  "module": null,
  "name": "Remove RN",
  "script": "frappe.ui.form.on('Sales Order', {\n    refresh: function(frm) {\n        // fetch the data from the \"Child of Repair Note\" table\n        frappe.call({\n            method: 'get_child_items',\n            doc: frm.doc,\n            callback: function(r) {\n                if (r.message) {\n                    // populate the items in the sales order item table\n                    $.each(r.message, function(i, item) {\n                        var row = frappe.model.add_child(frm.doc, 'Sales Order Item', 'items');\n                        row.item_code = item.item_code.replace('RN-', '');\n                        row.qty = item.qty;\n                        // add other item fields as needed\n                    });\n                    frm.refresh_field('items');\n                }\n            }\n        });\n    }\n});\n\nfunction get_child_items(doc) {\n    return frappe.db.get_list('Child of Repair Note', {\n        fields: ['item_code', 'qty'],\n        filters: {parent: doc.name}\n    });\n}\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Repair Note 1",
  "enabled": 0,
  "modified": "2023-03-23 10:57:22.681853",
  "module": null,
  "name": "Only service iyem in repair note",
  "script": "frappe.ui.form.on(\"Repair Note 1\", \"onload\", function(frm) {\n    frm.fields_dict.repair_note_table.grid.get_field(\"partno\").get_query = function(doc, cdt, cdn) {\n        return {\n            filters: [\n                  [\"Item\", \"item_group\", \"=\", \"Services\"],\n                  \n             //   [\"Item\", \"is_sales_item\", \"=\", 0],                        // for services \n             //   [\"Item\", \"is_stock_item\", \"=\", 1],                        // for product\n             //   [\"Item\", \"is_stock_item\", \"=\", 1],                       // for raw materials use both statement\n             //   [\"Item\", \"is_purchase_item\", \"=\", 1]                     // for raw material use both statement\n            ]\n        };\n    };\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Repair Note 1",
  "enabled": 1,
  "modified": "2023-03-23 11:00:00.349734",
  "module": null,
  "name": "Filter Item Group: Services in Repair Note 1",
  "script": "frappe.ui.form.on(\"Repair Note 1\", \"onload\", function(frm) {\n    frm.fields_dict.repair_note_table.grid.get_field(\"partno\").get_query = function(doc, cdt, cdn) {\n        return {\n            filters: [\n                  [\"Item\", \"item_group\", \"=\", \"Services\"],\n                  \n             //   [\"Item\", \"is_sales_item\", \"=\", 0],                        // for services \n             //   [\"Item\", \"is_stock_item\", \"=\", 1],                        // for product\n             //   [\"Item\", \"is_stock_item\", \"=\", 1],                       // for raw materials use both statement\n             //   [\"Item\", \"is_purchase_item\", \"=\", 1]                     // for raw material use both statement\n            ]\n        };\n    };\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Outward Checklist",
  "enabled": 0,
  "modified": "2023-03-24 11:35:19.053121",
  "module": null,
  "name": "fetch sales order through conection",
  "script": "frappe.ui.form.on('Outward Checklist', {  \n  rn_no: function(frm) {\n    if (frm.doc.rn_no) {\n       \n      frappe.db.get_list('Sales Order', {\n            filters: {\n                repair_note: ['=', frm.doc.rn_no]\n            }\n        }).then(function(orders) {\n            console.log(orders);\n            orders.forEach(function(order){\n                \n                //fetching sals invoice\n                                frappe.db.get_list('Sales Invoice Item', {\n                    filters: {\n                        sales_order: ['=', order.name]\n                    },fields:[\"parent\",\"creation\"]\n                }).then(function(workorders) {\n                    console.log(workorders);\n                    var uworkorders=workorders.filter((a,i)=>workorders.findIndex((s)=>a.parent==s.parent)===i);\n                    uworkorders.forEach(function(workorder){\n                    var d = frm.add_child(\"sales_invoice_details\");\n                            d.sales_invoice = workorder.parent;\n                            d.date = workorder.creation;\n                         \n                            \n                            frm.refresh_field(\"sales_invoice_details\");\n                           \n                    \n                    });\n                    \n                    \n                     //fetching delivery note\n                                frappe.db.get_list('Delivery Note Item', {\n                    filters: {\n                        against_sales_order: ['=', order.name]\n                    },fields:[\"parent\",\"creation\"]\n                }).then(function(workorders) {\n                    console.log(workorders);\n                    var uworkorders=workorders.filter((a,i)=>workorders.findIndex((s)=>a.parent==s.parent)===i);\n                    uworkorders.forEach(function(workorder){\n                    var d = frm.add_child(\"challan_details\");\n                            d.delivery_note = workorder.parent;\n                            d.date = workorder.creation;\n                         \n                            \n                            frm.refresh_field(\"challan_details\");\n                    \n                    });\n                \n                \n                // fetching work order\n                frappe.db.get_list('Work Order', {\n                    filters: {\n                        sales_order: ['=', order.name]\n                    },fields:[\"name\",\"sales_order\",\"item_name\",\"production_item\",\"qty\",\"stock_uom\",\"serial_no\"]\n                }).then(function(workorders) {\n                    console.log(workorders);\n                    workorders.forEach(function(workorder){\n                    var d = frm.add_child(\"work_order_detail\");\n                            d.wo_details = workorder.name;\n                            d.item = workorder.item_name;\n                            d.sales_order = workorder.sales_order;\n                            d.qty = workorder.qty;\n                            d.unit = workorder.stock_uom;\n                            d.part_no = workorder.production_item;\n                            \n                            frm.refresh_field(\"work_order_detail\");\n\n                            \n                    });\n                    \n                    \n                     // fetching CA Form\n                frappe.db.get_list('CA Form', {\n                    filters: {\n                        work_order: ['=', order.name]\n                    },fields:[\"work_order\"]\n                }).then(function(workorders) {\n                    console.log(workorders);\n                    workorders.forEach(function(workorder){\n                    var d = frm.add_child(\"ca_form_details\");\n                            d.ca_form = workorder.name;\n                            d.date = workorder.item_name;\n                           \n                            \n                            frm.refresh_field(\"ca_form_details\");\n\n                            \n                    });\n                                                \n            \n            });\n                \n                \n            });\n            \n            \n            \n        });\n   });\n        });\n        });\n   }\n  }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Outward Checklist",
  "enabled": 1,
  "modified": "2023-03-24 13:36:25.384946",
  "module": null,
  "name": "New Script",
  "script": "frappe.ui.form.on('Outward Checklist', {\n    rn_no: function(frm) {\n        if (frm.doc.rn_no) {\n            frappe.db.get_list('Sales Order', {\n                filters: {\n                    repair_note: ['=', frm.doc.rn_no]\n                }\n            }).then(function(orders) {\n                console.log(orders);\n                orders.forEach(function(order){\n                    \n                    \n                    //fetching sales invoice\n                    frappe.db.get_list('Sales Invoice Item', {\n                        filters: {\n                            sales_order: ['=', order.name]\n                        },\n                        fields: [\"parent\", \"creation\"]\n                    }).then(function(salesinvoices) {\n                        console.log(salesinvoices);\n                        var usalesinvoices=salesinvoices.filter((a,i)=>salesinvoices.findIndex((s)=>a.parent==s.parent)===i);\n                        usalesinvoices.forEach(function(salesinvoice){\n                            var d = frm.add_child(\"sales_invoice_details\");\n                            d.sales_invoice = salesinvoice.parent;\n                            d.date = salesinvoice.creation;\n                            frm.refresh_field(\"sales_invoice_details\");\n                        });\n                        \n                        \n                        \n                    \n                        //fetching delivery note\n                        frappe.db.get_list('Delivery Note Item', {\n                            filters: {\n                                against_sales_order: ['=', order.name]\n                            },\n                            fields: [\"parent\", \"creation\"]\n                        }).then(function(deliverynotes) {\n                            console.log(deliverynotes);\n                            var udeliverynotes=deliverynotes.filter((a,i)=>deliverynotes.findIndex((s)=>a.parent==s.parent)===i);\n                            udeliverynotes.forEach(function(deliverynote){\n                                var d = frm.add_child(\"challan_details\");\n                                d.delivery_note = deliverynote.parent;\n                                d.date = deliverynote.creation;\n                                frm.refresh_field(\"challan_details\");\n                            });\n                            \n                        \n                        \n                        \n                            // fetching work order\n                            frappe.db.get_list('Work Order', {\n                                filters: {\n                                    sales_order: ['=', order.name]\n                                },\n                                fields:[\"name\",\"sales_order\",\"item_name\",\"production_item\",\"qty\",\"stock_uom\",\"serial_no\"]\n                            }).then(function(workorders) {\n                                console.log(workorders);\n                                workorders.forEach(function(workorder){\n                                    var d = frm.add_child(\"work_order_detail\");\n                                    d.wo_details = workorder.name;\n                                    d.item = workorder.item_name;\n                                    d.sales_order = workorder.sales_order;\n                                    d.qty = workorder.qty;\n                                    d.unit = workorder.stock_uom;\n                                    d.part_no = workorder.production_item;\n                                    frm.refresh_field(\"work_order_detail\");\n                                });\n                            \n                                // fetching CA Form\n                                frappe.db.get_list('Work Order', {\n                                    filters: {\n                                        sales_order: ['=', order.name]\n                                    },\n                                    fields: [\"name\"]\n                                }).then(function(workorders) {\n                                    console.log(workorders);\n                                    \n                                    workorders.forEach(function(workorder){\n                                        frappe.db.get_list('CA Form', {\n                                            filters: {\n                                                work_order: ['=', workorder.name]\n                                            },\n                                            fields: [\"name\",\"posting_date\"]\n                                        }).then(function(ca_forms) {\n                                            console.log(ca_forms);\n                                            var uca_forms=ca_forms.filter((a,i)=>workorders.findIndex((s)=>a.parent==s.parent)===i);\n                                            uca_forms.forEach(function(ca_form){\n                                                var d = frm.add_child(\"ca_form_details\");\n                                                d.ca_form = ca_form.name;\n                                                d.date = ca_form.posting_date;\n                                                frm.refresh_field(\"ca_form_details\");\n                                            });\n                                        });\n                                    });\n                                });\n                            });\n                        });\n                    });\n                    });\n                });\n                        //fetching COC\n                        frappe.db.get_list('Certificate of Conformance', {\n                            filters: {\n                                rn_no: ['=', frm.doc.rn_no]\n                            },\n                            fields: [\"name\", \"date\"]\n                        }).then(function(cocs) {\n                           // console.log(workorders);\n                            //var uworkorders=workorders.filter((a,i)=>workorders.findIndex((s)=>a.parent==s.parent)===i);\n                            cocs.forEach(function(obj){\n                                var d = frm.add_child(\"certificate_of_conformance_details\");\n                                d.certificate_of_conformance = obj.name;\n                                d.date = obj.date;\n                                frm.refresh_field(\"certificate_of_conformance_details\");\n                            });\n            });\n        }\n    }\n});\n\nfunction getDateString(datetimeString) {\n  var datetime = new Date(datetimeString);\n  var year = datetime.getFullYear();\n  var month = (\"0\" + (datetime.getMonth() + 1)).slice(-2);\n  var date = (\"0\" + datetime.getDate()).slice(-2);\n  return date + \"-\" + month + \"-\" + year;\n}\n",
  "view": "Form"
 }
]